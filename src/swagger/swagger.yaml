openapi: 3.0.0
info:
    title: 'Library API'
    description: 'Library API using Express, MongoDB, and Swagger'
    version: 1.0.0
servers:
    -
        url: 'http://localhost:5000'
tags:
    -
        name: users
        description: 'User management operations'
    -
        name: books
        description: 'Book management operations'
components:
    schemas:
        book:
            type: object
            properties:
                title:
                    type: string
                author:
                    type: string
                isbn:
                    type: string
                publishedDate:
                    type: string
                    format: date
                availableCopies:
                    type: number
        user:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                age:
                    type: integer
paths:
    /api/books:
        post:
            tags:
                - books
            summary: 'Create a new book'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/book'
            responses:
                '201':
                    description: 'Book created successfully'
        get:
            tags:
                - books
            summary: 'Get all books'
            responses:
                '200':
                    description: 'A list of books'
    '/api/books/{id}':
        get:
            tags:
                - books
            summary: 'Get book by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: 'Book details'
        put:
            tags:
                - books
            summary: 'Update book by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/book'
            responses:
                '200':
                    description: 'Book updated'
        delete:
            tags:
                - books
            summary: 'Delete book by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: 'Book deleted'
    /api/users:
        post:
            tags:
                - users
            summary: 'Create a new user'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
            responses:
                '201':
                    description: 'User created successfully'
        get:
            tags:
                - users
            summary: 'Get all users'
            responses:
                '200':
                    description: 'A list of users'
    '/api/users/{id}':
        get:
            tags:
                - users
            summary: 'Get user by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: 'User details'
        put:
            tags:
                - users
            summary: 'Update user by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
            responses:
                '200':
                    description: 'User updated'
        delete:
            tags:
                - users
            summary: 'Delete user by ID'
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: 'User deleted'
